version: "3.5"
services:

  geth:
    image: "ghcr.io/wasm0/wasm0-geth"
#    build: "./wasm0-geth"
    command:
      - "geth"
      - "--datadir=/datadir"
      - "--mine"
      - "--password=/datadir/password.txt"
      - "--allow-insecure-unlock"
      - "--unlock=0x08fae3885e299c24ff9841478eb946f41023ac69"
      - "--miner.etherbase=0x08fae3885e299c24ff9841478eb946f41023ac69"
      - "--bootnodes=enode://5c8e90050fabb7e14e4921dc107caf533140112245e7a231d0edc49861cd779760ad4804e7034952a5cc79422fa9d31c54e9a6141fb4995af7a6bfce7a39140f@host.docker.internal:30303"
      - "--gcmode=archive"
      - "--syncmode=full"
      - "--http"
      - "--http.addr=0.0.0.0"
      - "--http.api=eth,net,web3,debug,trace,txpool"
      - "--http.port=8545"
      - "--http.corsdomain=*"
      - "--http.vhosts=*"
      - "--ws"
      - "--ws.addr=0.0.0.0"
      - "--ws.api=eth,net,web3,debug,trace,txpool"
      - "--ws.port=8546"
      - "--ws.origins=*"
      - "--networkid=17243"
    volumes:
      - "./genesis/devnet.json:/datadir/genesis.json"
      - "./genesis/keystore:/datadir/keystore"
      - "./genesis/password.txt:/datadir/password.txt"
      - "./datadir/geth:/datadir/geth"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: always

  faucet:
    image: "ghcr.io/wasm0/wasm0-geth"
#    build: "./wasm0-geth"
    command:
      - "faucet"
      - "--bootnodes=enode://5c8e90050fabb7e14e4921dc107caf533140112245e7a231d0edc49861cd779760ad4804e7034952a5cc79422fa9d31c54e9a6141fb4995af7a6bfce7a39140f@host.docker.internal:30303"
      - "--network=17243"
      - "--account.json=/datadir/keystore/UTC--2022-02-02T10-59-47.185Z--b891fe7b38f857f53a7b5529204c58d5c487280b"
      - "--account.pass=/datadir/password.txt"
      - "--rpcapi=ws://host.docker.internal:8546"
      - "--noauth=true"
      - "--faucet.name=BAS"
      - "--faucet.amount=10"
      - "--faucet.tiers=5"
    ports:
      - "3000:8080"
    volumes:
      - "./genesis/devnet.json:/datadir/genesis.json"
      - "./genesis/keystore:/datadir/keystore"
      - "./genesis/password.txt:/datadir/password.txt"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: always

  blockscout-db:
    image: postgres:13.6
    restart: always
    environment:
      POSTGRES_PASSWORD: ''
      POSTGRES_USER: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - ./datadir/blockscout:/var/lib/postgresql/data
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "7432:5432"
  blockscout:
    depends_on:
      - blockscout-db
    image: blockscout/blockscout:4.1.5
    restart: always
    links:
      - blockscout-db:database
    command: 'mix do ecto.create, ecto.migrate, phx.server'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      ETHEREUM_JSONRPC_VARIANT: "geth"
      BLOCK_TRANSFORMER: "clique"
      ETHEREUM_JSONRPC_HTTP_URL: "http://host.docker.internal:8545/"
      DATABASE_URL: "postgresql://postgres:@host.docker.internal:7432/blockscout?ssl=false"
      ECTO_USE_SSL: "false"
    ports:
      - "4000:4000"
#  blockscout-redis:
#    image: redis
#    command: redis-server --requirepass 123456
#    volumes:
#      - ./datadir/redis:/data
#    ports:
#      - "6379:6379"
#    restart: always
#  blockscout-gateway:
#    depends_on:
#      - blockscout
#    image: ankrnetwork/sidechain-explorer:devel
#    extra_hosts:
#      - 'host.docker.internal:host-gateway'
#    environment:
#      DATABASE_POSTGRES_URL: "postgres://postgres:@host.docker.internal:7432/blockscout?sslmode=disable"
#      DATABASE_REDIS_URL: "host.docker.internal:6379"
#      DATABASE_REDIS_PASSWORD: "123456"
#      GATEWAY_HTTP_ADDRESS: ":9000"
#      STAKING_ETH1_URL: "http://host.docker.internal:8545/"
#      REACT_APP_API_ENDPOINT: "/"
#      REACT_APP_DEFAULT_NETWORK: "default"
#    ports:
#      - "9000:9000"

  nginx:
    build: "./nginx"
    environment:
      DOMAIN_NAME: "${DOMAIN_NAME}"
    volumes:
      - /root/.acme.sh/:/root/.acme.sh/
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - "80:80"
      - "443:443"
    restart: always